#PF-Prac-35
def convert_to_roman(num):
    l1=['','I','X','C','M']
    l2=['','V','L','D']
    out=''
    a=str(num)[::-1]
    for i in range(len(a)):
        if i==3:
            for j in range(int(a[i])):
                out='M'+out
            break
        if 1<=int(a[i])<=3:
            for j in range(int(a[i])):
                out=l1[i+1]+out
        if 4==int(a[i]):
            out=l1[i+1]+l2[i+1]+out
        if 5==int(a[i]):
            out=l2[i+1]+out
        if 6<=int(a[i])<=8:
            for j in range(int(a[i])-5):
                out=l1[i+1]+out
            out=l2[i+1]+out
        if 9==int(a[i]):
            out=l1[i+1]+l1[i+2]+out
    return out
# for num in range(1,10):    
print(convert_to_roman(4999))

'''
...........Alternative................
#PF-Prac-35
def convert_to_roman(num):
    d1={1:'I',2:'II',3:'III',4:'IV',5:'V',\
        6:'VI',7:'VII',8:'VIII',9:'IX',10:'X',\
        20:'XX',30:'XXX',40:'XL',50:'L',60:'LX',\
        70:'LXX',80:'LXXX',90:'XC',\
        100:'C',200:'CC',300:'CCC',400:'CD',\
        500:'D',600:'DC',700:'DCC',800:'DCCC',900:'CM',1000:'M',\
        2000:'MM',3000:'MMM',4000:'MMMM'}
    s=str(num)
    r=''
    count=0
    if num in d1.keys():
        return d1[num]
    while s!='':
        a=s[-1]
        if int(a)!=0:
            r=d1[int(a)*10**count]+r
        count+=1
        s=s[:-1]
    return r

convert_to_roman(101)
for num in range(1,5000):    
    print(num," : ",convert_to_roman(num))
    
'''
