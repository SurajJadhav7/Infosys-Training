#DSA-Assgn-12
from DataStructures import Stack, Queue
class Ball:
    def __init__(self,color,name):
        self.__color=color
        self.__name=name
    def __str__(self):
        return (self.__color+" "+self.__name)
    def get_color(self):
        return self.__color
    def get_name(self):
        return self.__name
class Game:
    def __init__(self,ball_stack):
        self.ball_container=ball_stack
        self.red_balls_container=Stack(2)
        self.green_balls_container=Stack(2)
        self.blue_balls_container=Stack(2)
        self.yellow_balls_container=Stack(2)
    def grouping_based_on_color(self):
        while not self.ball_container.is_empty():
            a=self.ball_container.pop()
            if a.get_color()=='Red':
                self.red_balls_container.push(a)
            elif a.get_color()=='Blue':
                self.blue_balls_container.push(a)
            elif a.get_color()=='Yellow':
                self.yellow_balls_container.push(a)
            elif a.get_color()=='Green':
                self.green_balls_container.push(a)
    def rearrange_balls(self,color):
        for i in self.red_balls_container,self.green_balls_container,self.blue_balls_container,self.yellow_balls_container:
            x=i.pop()
            if x.get_name()=='B':
                y=i.pop()
                i.push(x)
                i.push(y)
            else:
                i.push(x)
        
    def display_ball_details(self,color):
        pass

#Use different values to test your program
ball1=Ball("Red","A")
ball2=Ball("Blue","B")
ball3=Ball("Yellow","B")
ball4=Ball("Blue","A")
ball5=Ball("Yellow","A")
ball6=Ball("Green","B")
ball7=Ball("Green","A")
ball8=Ball("Red","B")
ball_list=Stack(8)
ball_list.push(ball1)
ball_list.push(ball2)
ball_list.push(ball3)
ball_list.push(ball4)
ball_list.push(ball5)
ball_list.push(ball6)
ball_list.push(ball7)
ball_list.push(ball8)

#Create objects of Game class, invoke the methods and test the program
