#OOPR-Prac-5
#Start writing you code here
import time
from datetime import timedelta
class GarmentFactory:
    garment_dict={"shirt":[45,400,30],"trousers":[250,500,25],"saree":[500,750,10],"jersey": [750,200,5]}
    def __init__(self,cloth_type,no_of_piece):
        self.__cloth_type=cloth_type
        self.__no_of_piece=no_of_piece
        self.__delivery_date=None  
        self.__order_date=time.strftime("%d/%m/%Y")

    def get_cloth_type(self):
        return self.__cloth_type
    def get_no_of_piece(self):
        return self.__no_of_piece
    def get_delivery_date(self):
        return self.__delivery_date
    def get_order_date(self):
        return self.__order_date

    def take_order(self):
        if self.__cloth_type in GarmentFactory.garment_dict.keys():
            if GarmentFactory.garment_dict[self.__cloth_type][0]>=self.__no_of_piece:
                a=self.calculate_amount()
                self.update_stock()
                return a
        else:
            return -1
    def calculate_amount(self):
        return self.__no_of_piece*GarmentFactory.garment_dict[self.__cloth_type][1]
    def update_stock(self):
        n=GarmentFactory.garment_dict[self.__cloth_type][2]
        self.__delivery_date= self.__order_date + timedelta(days=n)  
        self.__delivery_date.strftime("%d/%m/%Y")
        GarmentFactory.garment_dict[self.__cloth_type][0]-=self.__no_of_piece
